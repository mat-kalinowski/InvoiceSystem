version: "3.2"
services:
  db:
    image: postgres:14.3
    restart: always
    container_name: db
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test"]
      interval: 2s
      timeout: 5s
      retries: 5
    expose:
      - 5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - db-net

  backend:
    restart: always
    container_name: backend
    build:
      context: ./backend/
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    volumes:
      - ./backend:/app/backend
    depends_on:
      db:
        condition: service_healthy
    networks:
      - db-net

  frontend:
    restart: always
    container_name: frontend
    command : "npm run dev"
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    ports:
      - 2137:2137
    stdin_open: true
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    depends_on:
      - backend

networks:
  db-net:
    driver: bridge

volumes:
  pgdata:
